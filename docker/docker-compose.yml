# Adapted from
# https://github.com/aganse/docker_mlflow_db/blob/master/compose_variations/docker-compose.mlflow_postgres.yaml


# This version exposes the underlying postgres database as well as the mlflow
# server, so we can access the database contents directly.
# 
# Have the following environment vars set in shell before running docker-compose
# (suggested values here but can use whatever desired):
# export DB_NAME=mlflowdb
# export DB_USER=postgres
# export DB_PW=<somepassword>
# export DB_PORT=5432
# export MLFLOW_PORT=5001
#
# AWS S3 bucket can be used instead of local drive for artifacts store via
# commented-out environment lines below.

version: '3.3'

services:
  db:
    restart: always
    image: postgres:latest
    container_name: mlflow_db
    expose:
      - ${DB_PORT}
    networks:
      - mydefault
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
    volumes:
      - db_datapg:/var/lib/postgresql/data

  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    image: mlflow_server
    container_name: mlflow_server
    networks:
      - mydefault
    expose:
      - ${MLFLOW_PORT}
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}"
    environment:
      - BACKEND=postgresql://${DB_USER}:${DB_PW}@db:${DB_PORT}/${DB_NAME}
      - ARTIFACTS=/mlruns
      # For artifact store in AWS S3 (note boto was installed in container):
      #  - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      #  - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      #  - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      #  - ARTIFACTS="s3://mlflow_bucket/mlflow/"
    volumes:
      - mlrun_data:/mlruns

    command: 
      - sh   # (sh allows for var substitution of BACKEND and ARTIFACTS)
      - -c
      - mlflow server 
        --port ${MLFLOW_PORT} 
        --host 0.0.0.0 
        --backend-store-uri $${BACKEND} 
        --default-artifact-root $${ARTIFACTS}
    depends_on:
      - db



networks:
  mydefault:
    driver: bridge

volumes:
  db_datapg:
  mlrun_data: