version: '3.3'

services:
  db:
    restart: unless-stopped
    image: postgres:latest
    container_name: mlflow_db
    expose:
      - ${DB_PORT}
    networks:
      - mlflow_network
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
    volumes:
      - ${DB_PATH}:/var/lib/postgresql/data

  app:
    restart: unless-stopped
    image: mlflow:latest
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    container_name: mlflow_server
    networks:
      - mlflow_network
    expose:
      - ${MLFLOW_PORT}
    ports:
      - "${MLFLOW_PORT}:5000"
    environment:
      - BACKEND=postgresql://${DB_USER}:${DB_PW}@db:${DB_PORT}/${DB_NAME}
      # - ARTIFACT_PATH=${ARTIFACT_PATH}
      # For artifact store in AWS S3 (note boto was installed in container):
      #  - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      #  - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      #  - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      #  - ARTIFACTS="s3://mlflow_bucket/mlflow/"
    command:
      - sh   # (sh allows for var substitution of BACKEND)
      - -c
      - mlflow server 
        --host 0.0.0.0 
        --port 5000 
        --backend-store-uri $${BACKEND}
        --no-serve-artifacts
        --default-artifact-root ${ARTIFACT_PATH}
        --gunicorn-opts "--timeout 180 --log-level debug --access-logfile -"
    depends_on:
      - db

networks:
  mlflow_network:
    driver: bridge
